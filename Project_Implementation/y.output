Grammar

    0 $accept: prog_start $end

    1 prog_start: input_file

    2 input_file: T_Newline input_file
    3           | statement input_file
    4           | /* empty */

    5 statement: simple_statement
    6          | compound_statement

    7 simple_statement: small_statement next_simple_statement

    8 next_simple_statement: T_Newline
    9                      | T_semicolon T_Newline
   10                      | T_semicolon small_statement next_simple_statement

   11 small_statement: expr_statement
   12                | import_statement

   13 import_statement: T_import T_identifier

   14 expr_statement: assignment_statement
   15               | or_test

   16 assignment_statement: T_identifier T_assignment assignment_expr

   17 assignment_expr: or_test
   18                | T_list T_left_par T_right_par
   19                | T_left_sq_b T_right_sq_b

   20 or_test: or_test T_or and_test
   21        | and_test

   22 and_test: and_test T_and not_test
   23         | not_test

   24 not_test: T_not not_test
   25         | comparison

   26 comparison: comparison T_LT arith_exp
   27           | comparison T_GT arith_exp
   28           | comparison T_EQ arith_exp
   29           | comparison T_GTE arith_exp
   30           | comparison T_LTE arith_exp
   31           | comparison T_NEQ arith_exp
   32           | comparison T_in arith_exp
   33           | arith_exp

   34 arith_exp: arith_exp T_plus arith_exp2
   35          | arith_exp T_minus arith_exp2
   36          | arith_exp2

   37 arith_exp2: arith_exp2 T_star factor
   38           | arith_exp2 T_divide factor
   39           | arith_exp2 T_modulus factor
   40           | factor

   41 factor: T_plus factor
   42       | T_minus factor
   43       | term

   44 term: T_identifier
   45     | constant
   46     | list_index
   47     | T_left_par or_test T_right_par

   48 constant: T_number
   49         | T_string
   50         | T_True
   51         | T_False

   52 list_index: T_identifier T_left_sq_b or_test T_right_sq_b

   53 compound_statement: if_statement
   54                   | for_statement

   55 if_statement: T_if test T_colon suite elif_statement optional_else

   56 test: or_test

   57 suite: simple_statement

   58 @1: /* empty */

   59 suite: T_Newline T_Indent @1 suite1

   60 suite_for: simple_statement
   61          | T_Newline T_Indent suite1

   62 suite1: statement T_Dedent
   63       | statement repeat_statement T_Dedent

   64 repeat_statement: statement repeat_statement
   65                 | statement
   66                 | T_Newline repeat_statement
   67                 | T_Newline

   68 elif_statement: /* empty */
   69               | T_elif test T_colon suite elif_statement

   70 optional_else: /* empty */
   71              | T_else T_colon suite

   72 @2: /* empty */

   73 for_statement: T_for @2 exprlist T_in testlist T_colon suite_for

   74 exprlist: first_exprlist last_exprlist

   75 first_exprlist: T_identifier

   76 last_exprlist: /* empty */
   77              | T_comma
   78              | T_comma first_exprlist last_exprlist

   79 testlist: range_fn

   80 range_fn: T_range T_left_par range_term T_right_par
   81         | T_range T_left_par range_term T_comma range_term T_right_par
   82         | T_range T_left_par range_term T_comma range_term T_comma range_term T_right_par

   83 range_term: T_identifier
   84           | T_number
   85           | list_index


Terminals, with rules where they appear

$end (0) 0
error (256)
T_Indent (258) 59 61
T_Dedent (259) 62 63
T_import (260) 13
T_True (261) 50
T_False (262) 51
T_not (263) 24
T_and (264) 22
T_or (265) 20
T_if (266) 55
T_else (267) 71
T_elif (268) 69
T_for (269) 73
T_in (270) 32 73
T_range (271) 80 81 82
T_list (272) 18
T_plus (273) 34 41
T_minus (274) 35 42
T_star (275) 37
T_divide (276) 38
T_modulus (277) 39
T_LT (278) 26
T_GT (279) 27
T_LTE (280) 30
T_GTE (281) 29
T_EQ (282) 28
T_NEQ (283) 31
T_semicolon (284) 9 10
T_colon (285) 55 69 71 73
T_comma (286) 77 78 81 82
T_assignment (287) 16
T_left_sq_b (288) 19 52
T_right_sq_b (289) 19 52
T_left_par (290) 18 47 80 81 82
T_right_par (291) 18 47 80 81 82
T_number (292) 48 84
T_identifier (293) 13 16 44 52 75 83
T_string (294) 49
T_Newline (295) 2 8 9 59 61 66 67


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
prog_start (42)
    on left: 1, on right: 0
input_file (43)
    on left: 2 3 4, on right: 1 2 3
statement (44)
    on left: 5 6, on right: 3 62 63 64 65
simple_statement (45)
    on left: 7, on right: 5 57 60
next_simple_statement (46)
    on left: 8 9 10, on right: 7 10
small_statement (47)
    on left: 11 12, on right: 7 10
import_statement (48)
    on left: 13, on right: 12
expr_statement (49)
    on left: 14 15, on right: 11
assignment_statement (50)
    on left: 16, on right: 14
assignment_expr (51)
    on left: 17 18 19, on right: 16
or_test (52)
    on left: 20 21, on right: 15 17 20 47 52 56
and_test (53)
    on left: 22 23, on right: 20 21 22
not_test (54)
    on left: 24 25, on right: 22 23 24
comparison (55)
    on left: 26 27 28 29 30 31 32 33, on right: 25 26 27 28 29 30 31
    32
arith_exp (56)
    on left: 34 35 36, on right: 26 27 28 29 30 31 32 33 34 35
arith_exp2 (57)
    on left: 37 38 39 40, on right: 34 35 36 37 38 39
factor (58)
    on left: 41 42 43, on right: 37 38 39 40 41 42
term (59)
    on left: 44 45 46 47, on right: 43
constant (60)
    on left: 48 49 50 51, on right: 45
list_index (61)
    on left: 52, on right: 46 85
compound_statement (62)
    on left: 53 54, on right: 6
if_statement (63)
    on left: 55, on right: 53
test (64)
    on left: 56, on right: 55 69
suite (65)
    on left: 57 59, on right: 55 69 71
@1 (66)
    on left: 58, on right: 59
suite_for (67)
    on left: 60 61, on right: 73
suite1 (68)
    on left: 62 63, on right: 59 61
repeat_statement (69)
    on left: 64 65 66 67, on right: 63 64 66
elif_statement (70)
    on left: 68 69, on right: 55 69
optional_else (71)
    on left: 70 71, on right: 55
for_statement (72)
    on left: 73, on right: 54
@2 (73)
    on left: 72, on right: 73
exprlist (74)
    on left: 74, on right: 73
first_exprlist (75)
    on left: 75, on right: 74 78
last_exprlist (76)
    on left: 76 77 78, on right: 74 78
testlist (77)
    on left: 79, on right: 73
range_fn (78)
    on left: 80 81 82, on right: 79
range_term (79)
    on left: 83 84 85, on right: 80 81 82


state 0

    0 $accept: . prog_start $end

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 13

    $default  reduce using rule 4 (input_file)

    prog_start            go to state 14
    input_file            go to state 15
    statement             go to state 16
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34


state 1

   13 import_statement: T_import . T_identifier

    T_identifier  shift, and go to state 35


state 2

   50 constant: T_True .

    $default  reduce using rule 50 (constant)


state 3

   51 constant: T_False .

    $default  reduce using rule 51 (constant)


state 4

   24 not_test: T_not . not_test

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    not_test    go to state 37
    comparison  go to state 25
    arith_exp   go to state 26
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 5

   55 if_statement: T_if . test T_colon suite elif_statement optional_else

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    or_test     go to state 38
    and_test    go to state 23
    not_test    go to state 24
    comparison  go to state 25
    arith_exp   go to state 26
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31
    test        go to state 39


state 6

   73 for_statement: T_for . @2 exprlist T_in testlist T_colon suite_for

    $default  reduce using rule 72 (@2)

    @2  go to state 40


state 7

   41 factor: T_plus . factor

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    factor      go to state 41
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 8

   42 factor: T_minus . factor

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    factor      go to state 42
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 9

   47 term: T_left_par . or_test T_right_par

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    or_test     go to state 43
    and_test    go to state 23
    not_test    go to state 24
    comparison  go to state 25
    arith_exp   go to state 26
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 10

   48 constant: T_number .

    $default  reduce using rule 48 (constant)


state 11

   16 assignment_statement: T_identifier . T_assignment assignment_expr
   44 term: T_identifier .
   52 list_index: T_identifier . T_left_sq_b or_test T_right_sq_b

    T_assignment  shift, and go to state 44
    T_left_sq_b   shift, and go to state 45

    $default  reduce using rule 44 (term)


state 12

   49 constant: T_string .

    $default  reduce using rule 49 (constant)


state 13

    2 input_file: T_Newline . input_file

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 13

    $default  reduce using rule 4 (input_file)

    input_file            go to state 46
    statement             go to state 16
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34


state 14

    0 $accept: prog_start . $end

    $end  shift, and go to state 47


state 15

    1 prog_start: input_file .

    $default  reduce using rule 1 (prog_start)


state 16

    3 input_file: statement . input_file

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 13

    $default  reduce using rule 4 (input_file)

    input_file            go to state 48
    statement             go to state 16
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34


state 17

    5 statement: simple_statement .

    $default  reduce using rule 5 (statement)


state 18

    7 simple_statement: small_statement . next_simple_statement

    T_semicolon  shift, and go to state 49
    T_Newline    shift, and go to state 50

    next_simple_statement  go to state 51


state 19

   12 small_statement: import_statement .

    $default  reduce using rule 12 (small_statement)


state 20

   11 small_statement: expr_statement .

    $default  reduce using rule 11 (small_statement)


state 21

   14 expr_statement: assignment_statement .

    $default  reduce using rule 14 (expr_statement)


state 22

   15 expr_statement: or_test .
   20 or_test: or_test . T_or and_test

    T_or  shift, and go to state 52

    $default  reduce using rule 15 (expr_statement)


state 23

   21 or_test: and_test .
   22 and_test: and_test . T_and not_test

    T_and  shift, and go to state 53

    $default  reduce using rule 21 (or_test)


state 24

   23 and_test: not_test .

    $default  reduce using rule 23 (and_test)


state 25

   25 not_test: comparison .
   26 comparison: comparison . T_LT arith_exp
   27           | comparison . T_GT arith_exp
   28           | comparison . T_EQ arith_exp
   29           | comparison . T_GTE arith_exp
   30           | comparison . T_LTE arith_exp
   31           | comparison . T_NEQ arith_exp
   32           | comparison . T_in arith_exp

    T_in   shift, and go to state 54
    T_LT   shift, and go to state 55
    T_GT   shift, and go to state 56
    T_LTE  shift, and go to state 57
    T_GTE  shift, and go to state 58
    T_EQ   shift, and go to state 59
    T_NEQ  shift, and go to state 60

    $default  reduce using rule 25 (not_test)


state 26

   33 comparison: arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 33 (comparison)


state 27

   36 arith_exp: arith_exp2 .
   37 arith_exp2: arith_exp2 . T_star factor
   38           | arith_exp2 . T_divide factor
   39           | arith_exp2 . T_modulus factor

    T_star     shift, and go to state 63
    T_divide   shift, and go to state 64
    T_modulus  shift, and go to state 65

    $default  reduce using rule 36 (arith_exp)


state 28

   40 arith_exp2: factor .

    $default  reduce using rule 40 (arith_exp2)


state 29

   43 factor: term .

    $default  reduce using rule 43 (factor)


state 30

   45 term: constant .

    $default  reduce using rule 45 (term)


state 31

   46 term: list_index .

    $default  reduce using rule 46 (term)


state 32

    6 statement: compound_statement .

    $default  reduce using rule 6 (statement)


state 33

   53 compound_statement: if_statement .

    $default  reduce using rule 53 (compound_statement)


state 34

   54 compound_statement: for_statement .

    $default  reduce using rule 54 (compound_statement)


state 35

   13 import_statement: T_import T_identifier .

    $default  reduce using rule 13 (import_statement)


state 36

   44 term: T_identifier .
   52 list_index: T_identifier . T_left_sq_b or_test T_right_sq_b

    T_left_sq_b  shift, and go to state 45

    $default  reduce using rule 44 (term)


state 37

   24 not_test: T_not not_test .

    $default  reduce using rule 24 (not_test)


state 38

   20 or_test: or_test . T_or and_test
   56 test: or_test .

    T_or  shift, and go to state 52

    $default  reduce using rule 56 (test)


state 39

   55 if_statement: T_if test . T_colon suite elif_statement optional_else

    T_colon  shift, and go to state 66


state 40

   73 for_statement: T_for @2 . exprlist T_in testlist T_colon suite_for

    T_identifier  shift, and go to state 67

    exprlist        go to state 68
    first_exprlist  go to state 69


state 41

   41 factor: T_plus factor .

    $default  reduce using rule 41 (factor)


state 42

   42 factor: T_minus factor .

    $default  reduce using rule 42 (factor)


state 43

   20 or_test: or_test . T_or and_test
   47 term: T_left_par or_test . T_right_par

    T_or         shift, and go to state 52
    T_right_par  shift, and go to state 70


state 44

   16 assignment_statement: T_identifier T_assignment . assignment_expr

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_list        shift, and go to state 71
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_sq_b   shift, and go to state 72
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    assignment_expr  go to state 73
    or_test          go to state 74
    and_test         go to state 23
    not_test         go to state 24
    comparison       go to state 25
    arith_exp        go to state 26
    arith_exp2       go to state 27
    factor           go to state 28
    term             go to state 29
    constant         go to state 30
    list_index       go to state 31


state 45

   52 list_index: T_identifier T_left_sq_b . or_test T_right_sq_b

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    or_test     go to state 75
    and_test    go to state 23
    not_test    go to state 24
    comparison  go to state 25
    arith_exp   go to state 26
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 46

    2 input_file: T_Newline input_file .

    $default  reduce using rule 2 (input_file)


state 47

    0 $accept: prog_start $end .

    $default  accept


state 48

    3 input_file: statement input_file .

    $default  reduce using rule 3 (input_file)


state 49

    9 next_simple_statement: T_semicolon . T_Newline
   10                      | T_semicolon . small_statement next_simple_statement

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 76

    small_statement       go to state 77
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31


state 50

    8 next_simple_statement: T_Newline .

    $default  reduce using rule 8 (next_simple_statement)


state 51

    7 simple_statement: small_statement next_simple_statement .

    $default  reduce using rule 7 (simple_statement)


state 52

   20 or_test: or_test T_or . and_test

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    and_test    go to state 78
    not_test    go to state 24
    comparison  go to state 25
    arith_exp   go to state 26
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 53

   22 and_test: and_test T_and . not_test

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    not_test    go to state 79
    comparison  go to state 25
    arith_exp   go to state 26
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 54

   32 comparison: comparison T_in . arith_exp

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp   go to state 80
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 55

   26 comparison: comparison T_LT . arith_exp

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp   go to state 81
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 56

   27 comparison: comparison T_GT . arith_exp

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp   go to state 82
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 57

   30 comparison: comparison T_LTE . arith_exp

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp   go to state 83
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 58

   29 comparison: comparison T_GTE . arith_exp

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp   go to state 84
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 59

   28 comparison: comparison T_EQ . arith_exp

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp   go to state 85
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 60

   31 comparison: comparison T_NEQ . arith_exp

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp   go to state 86
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 61

   34 arith_exp: arith_exp T_plus . arith_exp2

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp2  go to state 87
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 62

   35 arith_exp: arith_exp T_minus . arith_exp2

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    arith_exp2  go to state 88
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 63

   37 arith_exp2: arith_exp2 T_star . factor

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    factor      go to state 89
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 64

   38 arith_exp2: arith_exp2 T_divide . factor

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    factor      go to state 90
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 65

   39 arith_exp2: arith_exp2 T_modulus . factor

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    factor      go to state 91
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31


state 66

   55 if_statement: T_if test T_colon . suite elif_statement optional_else

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 92

    simple_statement      go to state 93
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    suite                 go to state 94


state 67

   75 first_exprlist: T_identifier .

    $default  reduce using rule 75 (first_exprlist)


state 68

   73 for_statement: T_for @2 exprlist . T_in testlist T_colon suite_for

    T_in  shift, and go to state 95


state 69

   74 exprlist: first_exprlist . last_exprlist

    T_comma  shift, and go to state 96

    $default  reduce using rule 76 (last_exprlist)

    last_exprlist  go to state 97


state 70

   47 term: T_left_par or_test T_right_par .

    $default  reduce using rule 47 (term)


state 71

   18 assignment_expr: T_list . T_left_par T_right_par

    T_left_par  shift, and go to state 98


state 72

   19 assignment_expr: T_left_sq_b . T_right_sq_b

    T_right_sq_b  shift, and go to state 99


state 73

   16 assignment_statement: T_identifier T_assignment assignment_expr .

    $default  reduce using rule 16 (assignment_statement)


state 74

   17 assignment_expr: or_test .
   20 or_test: or_test . T_or and_test

    T_or  shift, and go to state 52

    $default  reduce using rule 17 (assignment_expr)


state 75

   20 or_test: or_test . T_or and_test
   52 list_index: T_identifier T_left_sq_b or_test . T_right_sq_b

    T_or          shift, and go to state 52
    T_right_sq_b  shift, and go to state 100


state 76

    9 next_simple_statement: T_semicolon T_Newline .

    $default  reduce using rule 9 (next_simple_statement)


state 77

   10 next_simple_statement: T_semicolon small_statement . next_simple_statement

    T_semicolon  shift, and go to state 49
    T_Newline    shift, and go to state 50

    next_simple_statement  go to state 101


state 78

   20 or_test: or_test T_or and_test .
   22 and_test: and_test . T_and not_test

    T_and  shift, and go to state 53

    $default  reduce using rule 20 (or_test)


state 79

   22 and_test: and_test T_and not_test .

    $default  reduce using rule 22 (and_test)


state 80

   32 comparison: comparison T_in arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 32 (comparison)


state 81

   26 comparison: comparison T_LT arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 26 (comparison)


state 82

   27 comparison: comparison T_GT arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 27 (comparison)


state 83

   30 comparison: comparison T_LTE arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 30 (comparison)


state 84

   29 comparison: comparison T_GTE arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 29 (comparison)


state 85

   28 comparison: comparison T_EQ arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 28 (comparison)


state 86

   31 comparison: comparison T_NEQ arith_exp .
   34 arith_exp: arith_exp . T_plus arith_exp2
   35          | arith_exp . T_minus arith_exp2

    T_plus   shift, and go to state 61
    T_minus  shift, and go to state 62

    $default  reduce using rule 31 (comparison)


state 87

   34 arith_exp: arith_exp T_plus arith_exp2 .
   37 arith_exp2: arith_exp2 . T_star factor
   38           | arith_exp2 . T_divide factor
   39           | arith_exp2 . T_modulus factor

    T_star     shift, and go to state 63
    T_divide   shift, and go to state 64
    T_modulus  shift, and go to state 65

    $default  reduce using rule 34 (arith_exp)


state 88

   35 arith_exp: arith_exp T_minus arith_exp2 .
   37 arith_exp2: arith_exp2 . T_star factor
   38           | arith_exp2 . T_divide factor
   39           | arith_exp2 . T_modulus factor

    T_star     shift, and go to state 63
    T_divide   shift, and go to state 64
    T_modulus  shift, and go to state 65

    $default  reduce using rule 35 (arith_exp)


state 89

   37 arith_exp2: arith_exp2 T_star factor .

    $default  reduce using rule 37 (arith_exp2)


state 90

   38 arith_exp2: arith_exp2 T_divide factor .

    $default  reduce using rule 38 (arith_exp2)


state 91

   39 arith_exp2: arith_exp2 T_modulus factor .

    $default  reduce using rule 39 (arith_exp2)


state 92

   59 suite: T_Newline . T_Indent @1 suite1

    T_Indent  shift, and go to state 102


state 93

   57 suite: simple_statement .

    $default  reduce using rule 57 (suite)


state 94

   55 if_statement: T_if test T_colon suite . elif_statement optional_else

    T_elif  shift, and go to state 103

    $default  reduce using rule 68 (elif_statement)

    elif_statement  go to state 104


state 95

   73 for_statement: T_for @2 exprlist T_in . testlist T_colon suite_for

    T_range  shift, and go to state 105

    testlist  go to state 106
    range_fn  go to state 107


state 96

   77 last_exprlist: T_comma .
   78              | T_comma . first_exprlist last_exprlist

    T_identifier  shift, and go to state 67

    $default  reduce using rule 77 (last_exprlist)

    first_exprlist  go to state 108


state 97

   74 exprlist: first_exprlist last_exprlist .

    $default  reduce using rule 74 (exprlist)


state 98

   18 assignment_expr: T_list T_left_par . T_right_par

    T_right_par  shift, and go to state 109


state 99

   19 assignment_expr: T_left_sq_b T_right_sq_b .

    $default  reduce using rule 19 (assignment_expr)


state 100

   52 list_index: T_identifier T_left_sq_b or_test T_right_sq_b .

    $default  reduce using rule 52 (list_index)


state 101

   10 next_simple_statement: T_semicolon small_statement next_simple_statement .

    $default  reduce using rule 10 (next_simple_statement)


state 102

   59 suite: T_Newline T_Indent . @1 suite1

    $default  reduce using rule 58 (@1)

    @1  go to state 110


state 103

   69 elif_statement: T_elif . test T_colon suite elif_statement

    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 36
    T_string      shift, and go to state 12

    or_test     go to state 38
    and_test    go to state 23
    not_test    go to state 24
    comparison  go to state 25
    arith_exp   go to state 26
    arith_exp2  go to state 27
    factor      go to state 28
    term        go to state 29
    constant    go to state 30
    list_index  go to state 31
    test        go to state 111


state 104

   55 if_statement: T_if test T_colon suite elif_statement . optional_else

    T_else  shift, and go to state 112

    $default  reduce using rule 70 (optional_else)

    optional_else  go to state 113


state 105

   80 range_fn: T_range . T_left_par range_term T_right_par
   81         | T_range . T_left_par range_term T_comma range_term T_right_par
   82         | T_range . T_left_par range_term T_comma range_term T_comma range_term T_right_par

    T_left_par  shift, and go to state 114


state 106

   73 for_statement: T_for @2 exprlist T_in testlist . T_colon suite_for

    T_colon  shift, and go to state 115


state 107

   79 testlist: range_fn .

    $default  reduce using rule 79 (testlist)


state 108

   78 last_exprlist: T_comma first_exprlist . last_exprlist

    T_comma  shift, and go to state 96

    $default  reduce using rule 76 (last_exprlist)

    last_exprlist  go to state 116


state 109

   18 assignment_expr: T_list T_left_par T_right_par .

    $default  reduce using rule 18 (assignment_expr)


state 110

   59 suite: T_Newline T_Indent @1 . suite1

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12

    statement             go to state 117
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    suite1                go to state 118
    for_statement         go to state 34


state 111

   69 elif_statement: T_elif test . T_colon suite elif_statement

    T_colon  shift, and go to state 119


state 112

   71 optional_else: T_else . T_colon suite

    T_colon  shift, and go to state 120


state 113

   55 if_statement: T_if test T_colon suite elif_statement optional_else .

    $default  reduce using rule 55 (if_statement)


state 114

   80 range_fn: T_range T_left_par . range_term T_right_par
   81         | T_range T_left_par . range_term T_comma range_term T_right_par
   82         | T_range T_left_par . range_term T_comma range_term T_comma range_term T_right_par

    T_number      shift, and go to state 121
    T_identifier  shift, and go to state 122

    list_index  go to state 123
    range_term  go to state 124


state 115

   73 for_statement: T_for @2 exprlist T_in testlist T_colon . suite_for

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 125

    simple_statement      go to state 126
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    suite_for             go to state 127


state 116

   78 last_exprlist: T_comma first_exprlist last_exprlist .

    $default  reduce using rule 78 (last_exprlist)


state 117

   62 suite1: statement . T_Dedent
   63       | statement . repeat_statement T_Dedent

    T_Dedent      shift, and go to state 128
    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 129

    statement             go to state 130
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    repeat_statement      go to state 131
    for_statement         go to state 34


state 118

   59 suite: T_Newline T_Indent @1 suite1 .

    $default  reduce using rule 59 (suite)


state 119

   69 elif_statement: T_elif test T_colon . suite elif_statement

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 92

    simple_statement      go to state 93
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    suite                 go to state 132


state 120

   71 optional_else: T_else T_colon . suite

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 92

    simple_statement      go to state 93
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    suite                 go to state 133


state 121

   84 range_term: T_number .

    $default  reduce using rule 84 (range_term)


state 122

   52 list_index: T_identifier . T_left_sq_b or_test T_right_sq_b
   83 range_term: T_identifier .

    T_left_sq_b  shift, and go to state 45

    $default  reduce using rule 83 (range_term)


state 123

   85 range_term: list_index .

    $default  reduce using rule 85 (range_term)


state 124

   80 range_fn: T_range T_left_par range_term . T_right_par
   81         | T_range T_left_par range_term . T_comma range_term T_right_par
   82         | T_range T_left_par range_term . T_comma range_term T_comma range_term T_right_par

    T_comma      shift, and go to state 134
    T_right_par  shift, and go to state 135


state 125

   61 suite_for: T_Newline . T_Indent suite1

    T_Indent  shift, and go to state 136


state 126

   60 suite_for: simple_statement .

    $default  reduce using rule 60 (suite_for)


state 127

   73 for_statement: T_for @2 exprlist T_in testlist T_colon suite_for .

    $default  reduce using rule 73 (for_statement)


state 128

   62 suite1: statement T_Dedent .

    $default  reduce using rule 62 (suite1)


state 129

   66 repeat_statement: T_Newline . repeat_statement
   67                 | T_Newline .

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 129

    $default  reduce using rule 67 (repeat_statement)

    statement             go to state 130
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    repeat_statement      go to state 137
    for_statement         go to state 34


state 130

   64 repeat_statement: statement . repeat_statement
   65                 | statement .

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12
    T_Newline     shift, and go to state 129

    $default  reduce using rule 65 (repeat_statement)

    statement             go to state 130
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    repeat_statement      go to state 138
    for_statement         go to state 34


state 131

   63 suite1: statement repeat_statement . T_Dedent

    T_Dedent  shift, and go to state 139


state 132

   69 elif_statement: T_elif test T_colon suite . elif_statement

    T_elif  shift, and go to state 103

    $default  reduce using rule 68 (elif_statement)

    elif_statement  go to state 140


state 133

   71 optional_else: T_else T_colon suite .

    $default  reduce using rule 71 (optional_else)


state 134

   81 range_fn: T_range T_left_par range_term T_comma . range_term T_right_par
   82         | T_range T_left_par range_term T_comma . range_term T_comma range_term T_right_par

    T_number      shift, and go to state 121
    T_identifier  shift, and go to state 122

    list_index  go to state 123
    range_term  go to state 141


state 135

   80 range_fn: T_range T_left_par range_term T_right_par .

    $default  reduce using rule 80 (range_fn)


state 136

   61 suite_for: T_Newline T_Indent . suite1

    T_import      shift, and go to state 1
    T_True        shift, and go to state 2
    T_False       shift, and go to state 3
    T_not         shift, and go to state 4
    T_if          shift, and go to state 5
    T_for         shift, and go to state 6
    T_plus        shift, and go to state 7
    T_minus       shift, and go to state 8
    T_left_par    shift, and go to state 9
    T_number      shift, and go to state 10
    T_identifier  shift, and go to state 11
    T_string      shift, and go to state 12

    statement             go to state 117
    simple_statement      go to state 17
    small_statement       go to state 18
    import_statement      go to state 19
    expr_statement        go to state 20
    assignment_statement  go to state 21
    or_test               go to state 22
    and_test              go to state 23
    not_test              go to state 24
    comparison            go to state 25
    arith_exp             go to state 26
    arith_exp2            go to state 27
    factor                go to state 28
    term                  go to state 29
    constant              go to state 30
    list_index            go to state 31
    compound_statement    go to state 32
    if_statement          go to state 33
    suite1                go to state 142
    for_statement         go to state 34


state 137

   66 repeat_statement: T_Newline repeat_statement .

    $default  reduce using rule 66 (repeat_statement)


state 138

   64 repeat_statement: statement repeat_statement .

    $default  reduce using rule 64 (repeat_statement)


state 139

   63 suite1: statement repeat_statement T_Dedent .

    $default  reduce using rule 63 (suite1)


state 140

   69 elif_statement: T_elif test T_colon suite elif_statement .

    $default  reduce using rule 69 (elif_statement)


state 141

   81 range_fn: T_range T_left_par range_term T_comma range_term . T_right_par
   82         | T_range T_left_par range_term T_comma range_term . T_comma range_term T_right_par

    T_comma      shift, and go to state 143
    T_right_par  shift, and go to state 144


state 142

   61 suite_for: T_Newline T_Indent suite1 .

    $default  reduce using rule 61 (suite_for)


state 143

   82 range_fn: T_range T_left_par range_term T_comma range_term T_comma . range_term T_right_par

    T_number      shift, and go to state 121
    T_identifier  shift, and go to state 122

    list_index  go to state 123
    range_term  go to state 145


state 144

   81 range_fn: T_range T_left_par range_term T_comma range_term T_right_par .

    $default  reduce using rule 81 (range_fn)


state 145

   82 range_fn: T_range T_left_par range_term T_comma range_term T_comma range_term . T_right_par

    T_right_par  shift, and go to state 146


state 146

   82 range_fn: T_range T_left_par range_term T_comma range_term T_comma range_term T_right_par .

    $default  reduce using rule 82 (range_fn)
